<section class="body">
  <%= simple_form_for [current_property, @key] do |f| %>
    <div class="block">
      <%= f.input :title %>

      <% if @key.value.present? %>
        <div class="input">
          <h2>Key</h2>
          <p><%= @key.value %></p>
          <p><em>
            Place your key somewhere safe. <strong>Never commit keys to your code repositories.</strong> If your key becomes compromised, delete this key and generate a new one.
          </em></p>
        </div>
      <% end %>

      <h2>Writeable</h2>
      <p><em>
        Keys are readable by default and can not write to the database. Writeable keys can create, read, update, and delete elements via the API.
      </em></p>
      <%= f.input :writable %>
      <p><em>
        If you choose for this key to be writable (by checking the box above), you can limit it to only writing specific templates. If you do not choose a template, it will be able to write any template.
        <strong>If the key is not writable, it can not be limited to a specific template.</strong>
      </em></p>

      <div class="input multiselect">
        <label>Templates</label>
        <select id="key_template_selector" data-multi-select="#key_template_names">
          <option></option>
          <%== current_property.templates.collect(&:title).sort.map { |t| "<option value=\"#{t}\">#{t}</option>" }.join('') %>
        </select>
      </div>
      <%= f.input :template_names, as: :hidden, input_html: { value: @key.template_names.join(',') } %>
    </div>
    <%= f.submit 'Save Key' %>
    <%= link_to 'Delete Key', [current_property, @key], class: 'button delete', method: :delete, data: { confirm: 'Are you sure?' } if @key.value.present? %>
  <% end %>
</section>
